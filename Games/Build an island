-- Services
local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local player = Players.LocalPlayer

-- Settings
local autoHitEnabled = false
local autoContributeEnabled = false
local hitDelay = 1
local contributeDelay = 1
local selectedPlayers = {}

-- Create GUI
local screenGui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
screenGui.Name = "IslandScriptGui"
screenGui.ResetOnSpawn = false

local frame = Instance.new("Frame", screenGui)
frame.Size = UDim2.new(0, 280, 0, 380)
frame.Position = UDim2.new(0.5, -140, 0.5, -190)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true

local function createLabel(text, y, height)
	local label = Instance.new("TextLabel", frame)
	label.Size = UDim2.new(1, -20, 0, height or 20)
	label.Position = UDim2.new(0, 10, 0, y)
	label.Text = text
	label.TextColor3 = Color3.new(1, 1, 1)
	label.BackgroundTransparency = 1
	label.TextXAlignment = Enum.TextXAlignment.Left
	label.Font = Enum.Font.SourceSans
	label.TextSize = 16
	return label
end

local function createToggle(y, labelText, callback)
	local label = createLabel(labelText, y)
	local button = Instance.new("TextButton", frame)
	button.Size = UDim2.new(0, 60, 0, 20)
	button.Position = UDim2.new(1, -70, 0, y)
	button.Text = "OFF"
	button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	button.TextColor3 = Color3.new(1, 1, 1)
	button.Font = Enum.Font.SourceSans
	button.TextSize = 16

	local state = false
	button.MouseButton1Click:Connect(function()
		state = not state
		button.Text = state and "ON" or "OFF"
		button.BackgroundColor3 = state and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(60, 60, 60)
		callback(state)
	end)
end

local function createSlider(y, labelText, minValue, maxValue, step, getCallback)
	local value = minValue
	createLabel(labelText, y)

	local valueLabel = Instance.new("TextLabel", frame)
	valueLabel.Size = UDim2.new(0, 40, 0, 20)
	valueLabel.Position = UDim2.new(1, -70, 0, y)
	valueLabel.Text = tostring(value)
	valueLabel.BackgroundTransparency = 1
	valueLabel.TextColor3 = Color3.new(1, 1, 1)
	valueLabel.Font = Enum.Font.SourceSans
	valueLabel.TextSize = 16

	local minus = Instance.new("TextButton", frame)
	minus.Size = UDim2.new(0, 20, 0, 20)
	minus.Position = UDim2.new(1, -120, 0, y)
	minus.Text = "-"
	minus.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
	minus.TextColor3 = Color3.new(1, 1, 1)
	minus.Font = Enum.Font.SourceSans
	minus.TextSize = 16

	local plus = Instance.new("TextButton", frame)
	plus.Size = UDim2.new(0, 20, 0, 20)
	plus.Position = UDim2.new(1, -40, 0, y)
	plus.Text = "+"
	plus.BackgroundColor3 = Color3.fromRGB(100, 100, 100)
	plus.TextColor3 = Color3.new(1, 1, 1)
	plus.Font = Enum.Font.SourceSans
	plus.TextSize = 16

	local function update()
		valueLabel.Text = string.format("%.1f", value)
		getCallback(value)
	end

	minus.MouseButton1Click:Connect(function()
		value = math.max(minValue, value - step)
		update()
	end)

	plus.MouseButton1Click:Connect(function()
		value = math.min(maxValue, value + step)
		update()
	end)

	update()
end

-- Multi-Select Dropdown for Players
local dropdownLabel = createLabel("Select Players to Hit Resources:", 150)
local dropdownFrame = Instance.new("ScrollingFrame", frame)
dropdownFrame.Size = UDim2.new(1, -20, 0, 100)
dropdownFrame.Position = UDim2.new(0, 10, 0, 170)
dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, 0)
dropdownFrame.ScrollBarThickness = 4
dropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)

local function updateDropdown()
	dropdownFrame:ClearAllChildren()
	selectedPlayers = {}

	local y = 0
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= player then
			local toggle = Instance.new("TextButton", dropdownFrame)
			toggle.Size = UDim2.new(1, 0, 0, 25)
			toggle.Position = UDim2.new(0, 0, 0, y)
			toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			toggle.Text = plr.Name
			toggle.TextColor3 = Color3.new(1, 1, 1)
			toggle.Font = Enum.Font.SourceSans
			toggle.TextSize = 16
			local selected = false
			toggle.MouseButton1Click:Connect(function()
				selected = not selected
				toggle.BackgroundColor3 = selected and Color3.fromRGB(0, 170, 0) or Color3.fromRGB(60, 60, 60)
				if selected then
					selectedPlayers[plr.Name] = true
				else
					selectedPlayers[plr.Name] = nil
				end
			end)
			y += 25
		end
	end
	dropdownFrame.CanvasSize = UDim2.new(0, 0, 0, y)
end

-- Label below dropdown
createLabel("⚠️ For this to work, players must add you as Helper!", 275, 40)

-- Listen to player joins/leaves
Players.PlayerAdded:Connect(updateDropdown)
Players.PlayerRemoving:Connect(updateDropdown)
updateDropdown()

-- Toggle/Slider UI
createToggle(10, "Auto Hit Resources", function(val) autoHitEnabled = val end)
createSlider(40, "Hit Delay", 0.1, 10, 0.1, function(val) hitDelay = val end)
createToggle(80, "Auto Contribute Expand", function(val) autoContributeEnabled = val end)
createSlider(110, "Contribute Delay", 0.1, 10, 0.1, function(val) contributeDelay = val end)

-- Hit Loop
task.spawn(function()
	while true do
		if autoHitEnabled then
			local function hitResourcesFrom(plrName)
				local island = workspace:FindFirstChild("Plots")
				if island and island:FindFirstChild(plrName) and island[plrName]:FindFirstChild("Resources") then
					for _, resource in ipairs(island[plrName].Resources:GetChildren()) do
						ReplicatedStorage.Communication.HitResource:FireServer(resource)
					end
				end
			end

			hitResourcesFrom(player.Name)
			for plrName in pairs(selectedPlayers) do
				hitResourcesFrom(plrName)
			end
		end
		task.wait(hitDelay)
	end
end)

-- Contribute Loop
task.spawn(function()
	while true do
		if autoContributeEnabled then
			for _, item in ipairs(ReplicatedStorage.Storage.Items:GetChildren()) do
				for _, expand in pairs(workspace.Plots[player.Name].Expand:GetChildren()) do
					ReplicatedStorage.Communication.ContributeToExpand:FireServer(expand.Name, item.Name)
				end
			end
		end
		task.wait(contributeDelay)
	end
end)
